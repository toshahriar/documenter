services:

  web:
    image: ${PROJECT_NAME}-web:${IMAGE_TAG}
    build:
      context: .
      dockerfile: ./.docker/web/Dockerfile
      target: ${BUILD_TARGET}
    environment:
      - NODE_ENV=${NODE_ENV}
    ports:
      - "${WEB_PUBLISH_PORT}:3000"
    depends_on:
      - api
    volumes:
      - ./web:/app
    networks:
      app-net:
        aliases:
          - web

  api:
    image: ${PROJECT_NAME}-api:${IMAGE_TAG}
    build:
      context: .
      dockerfile: ./.docker/api/Dockerfile
      target: ${BUILD_TARGET}
    environment:
      - NODE_ENV=${NODE_ENV}
    ports:
      - "${API_PUBLISH_PORT}:3000"
    volumes:
      - ./api:/app
    networks:
      app-net:
        aliases:
          - api

  consumer:
    image: ${PROJECT_NAME}-consumer:${IMAGE_TAG}
    build:
      context: .
      dockerfile: ./.docker/api/Dockerfile
      target: ${BUILD_TARGET}
    environment:
      - NODE_ENV=${NODE_ENV}
    command: npm run consumer:dev
    volumes:
      - ./api:/app
    networks:
      app-net:
        aliases:
          - consumer

  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      app-net:
        aliases:
          - postgres

  redis:
    image: redis:alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      app-net:
        aliases:
          - redis

  rabbitmq:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      app-net:
        aliases:
          - rabbitmq

  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      app-net:
        aliases:
          - mailhog

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  app-net:
    driver: bridge
